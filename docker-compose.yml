# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '2.4'
services:
  mysql:
    image: mysql:5.7.37
    container_name: wso2-mysql-training
    networks:
      - wso2-training
    ports:
      - 3306
    environment:
      # Do not reconfigure mysql root password!
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./conf/mysql/scripts:/docker-entrypoint-initdb.d
      - ./conf/mysql/conf/my.cnf:/etc/mysql/my.cnf
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    command: [--ssl=0]
    # Health check must pass in order for services [api-manager, micro-integrator] to start
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-proot"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  rabbitmq:
    # RabbitMq docker resource is owned and managed and by Bitnami.
    # Refer to https://github.com/bitnami/bitnami-docker-rabbitmq for documentation.
    image: docker.io/bitnami/rabbitmq:3.10
    container_name: rabbitmq
    # Host name to be used for inter-container communication
    hostname: rabbitmq
    networks:
      - wso2-training
    ports:
      - '4369:4369'
      - '5551:5551'
      - '5552:5552'
      # HTTP Broker Listener
      - '5672:5672'
      - '25672:25672'
      # HTTP Listener for UI Manager accessable at http://localhost:15672
      - '15672:15672'
    environment:
      - RABBITMQ_USERNAME=user
      - RABBITMQ_PASSWORD=bitnami
      - RABBITMQ_SECURE_PASSWORD=yes
      - RABBITMQ_LOGS=-
    volumes:
      - 'rabbitmq_data:/bitnami/rabbitmq/mnesia'
    # Health check must pass in order for services [micro-integrator] to start
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  api-manager:
    build: ./dockerfiles/apim
    container_name: wso2-apim-training
    networks:
      - wso2-training
    # Health check must pass in order for services [micro-integrator] to start
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "8280"]
      interval: 10s
      start_period: 180s
      retries: 20
    # Dependent on healthy status for services [mysql] to start
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./conf/apim:/home/wso2carbon/wso2-config-volume
    ports:
      # WebsocketEndpointManager Netty Listener
      - "9099:9099"
      # WebsocketEndpointManager Netty SSL Listener
      - "8099:8099"
      # PassThroughListeningIOReactorManager Pass-through WebhookServer Listener
      - "9021:9021"
      # PassThroughListeningIOReactorManager Pass-through SecureWebhookServer Listener
      - "8021:8021"
      # Uncomment to publish JMX Agent [Broker] TCP port.
      # Port has been disabled as it conflicts with RabbitMq
      # JMX Agent [Broker] TCP port
      # - "5672:5672"
      # JMX Agent [Broker] TCP/SSL port
      - "8672:8672"
      # BinaryDataReceiver Binary SSL Transport port
      - "9711:9711"
      # BinaryDataReceiver Binary TCP Transport port
      - "9611:9611"
      # PassThroughListeningIOReactorManager Pass-through HTTP Listener
      - "8280:8280"
      # PassThroughListeningIOReactorManager Pass-through HTTPS Listener
      - "8243:8243"

  micro-integrator-dashboard:
    build: ./dockerfiles/mi-dashboard
    container_name: wso2-mi-dashboard-training
    hostname: wso2-mi-dashboard-training-container
    networks:
      - wso2-training
    # Health check must pass in order for services [micro-integrator] to start
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9743"]
      interval: 2s
      start_period: 10s
      retries: 5
    volumes:
      - ./conf/mi-dashboard:/home/wso2carbon/wso2-config-volume
    ports:
      # Pass-through HTTP Listener for UI accessable at https://localhost:9743/login
      - "9743:9743"

  micro-integrator:
    build: ./dockerfiles/mi
    container_name: wso2-mi-training
    networks:
      - wso2-training
    environment:
      - JAVA_OPTS=-DenableManagementApi=true
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8290"]
      interval: 10s
      start_period: 30s
      retries: 10 
    depends_on:
      mysql:
        condition: service_healthy
      api-manager:
        condition: service_healthy
      micro-integrator-dashboard:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

    volumes:
      - ./conf/mi:/home/wso2carbon/wso2-config-volume
      - ./dockerfiles/mi/capps:/home/wso2carbon/wso2mi-4.1.0/repository/deployment/server/carbonapps
    ports:
      # Pass-through HTTP Listener
      - "8290:8290"
      # Pass-through HTTP Listener QueryDoctor Inbound Endpoint
      - "8285:8285"
      # Pass-through HTTPS Listener
      - "8253:8253"
      # Pass-through EI_INTERNAL_HTTP_INBOUND_ENDPOINT Listener
      - "9201:9201"
      # Pass-through EI_INTERNAL_HTTPS_INBOUND_ENDPOINT Listener
      - "9164:9164"

  hospital-service:
    build: ./dockerfiles/hospital-service
    container_name: wso2-hospital-service
    hostname: hospital-service
    networks:
      - wso2-training
    ports:
      # Pass-through HTTP Listener
      - "9090:9090"

volumes:
  rabbitmq_data:
    driver: local

networks:
  wso2-training:
    external: 
      name: wso2-training